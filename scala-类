class Car{
  private var name;
  def name()={name}
}

class Car(var name:String,val age:Int){
  def this(name,age,sex){
    this(name,age)
    sex= 5
  }
}
this构造器，第一行必须为主构造器调用
在类中，var类型变量会被编译成private，并声明它的公有getter和setter方法

类型别名type cop = Car


扩展类时必须把派生类的参数传递给基类的某个构造器，因为只有主构造器才能调用一个基类的构造器

参数化
def echo[T](name:T){}

class Message[T](val content:T){
  def is(value:T):Boolean=value==content
}

单例对象  创建单例对象时 编译器会自动把单例中的实例和方法声明为static

创建枚举类
object Currency extends Enumeration{
  type Currency = value
  val CNY,GBP=value
}

包对象


